#include<iostream>
#include<bits/stdc++.h>

using namespace std;
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        this->left =  NULL;this->right=NULL;
    }
};


void printSpiral(struct Node *root);
int main()
{
   int t;
  cin>>t;
  while (t--)
  {
     map<int, Node*> m;
     int n;
     scanf("%d\n",&n);
     Node *root = NULL;
     while (n--)
     {
        Node *parent;
        char lr;
        int n1, n2;
        scanf("%d %d %c", &n1, &n2, &lr);
      //  cout << n1 << " " << n2 << " " << (char)lr << endl;
        if (m.find(n1) == m.end())
        {
           parent = new Node(n1);
           m[n1] = parent;
           if (root == NULL)
             root = parent;
        }
        else
           parent = m[n1];

        Node *child = new Node(n2);
        if (lr == 'L')
          parent->left = child;
        else
          parent->right = child;
        m[n2]  = child;
     }

    printSpiral(root);
    cout<<endl;
  }
    return 0;
}

void printSpiral(Node *root)
{ if(!root)return;
  queue<Node*>s;
  s.push(root);
  vector<int>v;
  int height=1;
  while(!s.empty())
  {int n=s.size();

      for(int i=0;i<n;i++)
      {Node* temp=s.front();
      s.pop();
          v.push_back(temp->data);
      if(temp->left)s.push(temp->left);
      if(temp->right)s.push(temp->right);
       }

       if(height%2==0)
       {for(int i=0;i<v.size();i++)cout<<v[i]<<" ";
       }
       else
       {reverse(v.begin(),v.end());
       for(int i=0;i<v.size();i++)
        cout<<v[i]<<" ";
       }
       height++;
       v.clear();
      }
  }



